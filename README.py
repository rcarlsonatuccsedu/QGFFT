#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jul 15 08:42:52 2019

@author: robertcarlson
"""
# This set of files is a Python program meant to document and illustrate part of the work described in 
# the manuscropt "A quantum graph FFT with applications to partial differential equations on networks".
# Only the pseudospectral method example is generated by this code.
# This example exercises the most nontrivial functions described in the manuscript,
# including the QGFFT and its inverse.
# While most of the code is the same as used to generate the pseudospectral example in the manuscript,
# it is not literally the same code.  Some diagnostic features and other algorithms were deleted, and some graphing 
# instructions were recreated.

# Simply run the main file, aptly named 'main'.
# The initial output is data such as graph edges, a list of vertices with their
# adjacent vertices, and a list of fundamental frequencies.

# The progam will stop with a screen message "Enter final time".
# Enter '4', and at the next prompt '800' for the number of time steps.
# The program will report completed steps.  At the first prompt 'Hit return'
# the solution to the Schrodinger equation has been computed, and the square of 
# the absolute value of the solution will be displayed.  The data is generated for a 
# sequence of time steps; currently it is set to display the solution every 20 time steps.

# The code should run with adjustments to the input graph and the initial function.
# The number of time steps and the final time are potentially subject to stability issues.  
# Input graphs should have edge lengths
# at most one.  Input graphs should have all vertices with degree two or more.
# If the graph is changed, necessary changes related to generated images are expectected in the file 'firststeps'
# and in the output image generating 'Plots.'
# Graph edges may not have the orientation expected for visualization.
# The 'underlining' in the current output is specific to this graph.  